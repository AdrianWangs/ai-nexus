&parser.Thrift{
    Filename:    "../../../../resources/idl/nexus-service.thrift",
    Includes:    nil,
    CppIncludes: nil,
    Namespaces:  {
        &parser.Namespace{
            Language:    "go",
            Name:        "nexus_microservice",
            Annotations: nil,
        },
    },
    Typedefs:  nil,
    Constants: nil,
    Enums:     nil,
    Structs:   {
        &parser.StructLike{
            Category: "struct",
            Name:     "FunctionCall",
            Fields:   {
                &parser.Field{
                    ID:           1,
                    Name:         "name",
                    Requiredness: 1,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 函数名称",
                },
                &parser.Field{
                    ID:           2,
                    Name:         "arguments",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 函数参数, json格式",
                },
            },
            Annotations:      nil,
            ReservedComments: "// 函数调用参数",
        },
        &parser.StructLike{
            Category: "struct",
            Name:     "ToolCall",
            Fields:   {
                &parser.Field{
                    ID:           1,
                    Name:         "index",
                    Requiredness: 1,
                    Type:         &parser.Type{
                        Name:        "i64",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 工具索引",
                },
                &parser.Field{
                    ID:           2,
                    Name:         "id",
                    Requiredness: 1,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 工具ID",
                },
                &parser.Field{
                    ID:           3,
                    Name:         "type",
                    Requiredness: 1,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 默认为function",
                },
                &parser.Field{
                    ID:           4,
                    Name:         "function_call",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "FunctionCall",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 函数调用",
                },
            },
            Annotations:      nil,
            ReservedComments: "",
        },
        &parser.StructLike{
            Category: "struct",
            Name:     "Message",
            Fields:   {
                &parser.Field{
                    ID:           1,
                    Name:         "role",
                    Requiredness: 1,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 消息角色",
                },
                &parser.Field{
                    ID:           2,
                    Name:         "content",
                    Requiredness: 1,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 消息内容",
                },
                &parser.Field{
                    ID:           3,
                    Name:         "name",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 消息工具名称",
                },
                &parser.Field{
                    ID:           4,
                    Name:         "function_call",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "FunctionCall",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 函数调用",
                },
                &parser.Field{
                    ID:           5,
                    Name:         "tool_calls",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:      "list",
                        KeyType:   (*parser.Type)(nil),
                        ValueType: &parser.Type{
                            Name:        "ToolCall",
                            KeyType:     (*parser.Type)(nil),
                            ValueType:   (*parser.Type)(nil),
                            CppType:     "",
                            Annotations: nil,
                            Category:    0,
                            Reference:   (*parser.Reference)(nil),
                            IsTypedef:   (*bool)(nil),
                        },
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 工具调用",
                },
            },
            Annotations:      nil,
            ReservedComments: "// 定义消息格式",
        },
        &parser.StructLike{
            Category: "struct",
            Name:     "AskRequest",
            Fields:   {
                &parser.Field{
                    ID:           1,
                    Name:         "model",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 模型名称",
                },
                &parser.Field{
                    ID:           2,
                    Name:         "top_p",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "double",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 生成文本的随机性",
                },
                &parser.Field{
                    ID:           3,
                    Name:         "temperature",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "double",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 生成文本的多样性",
                },
                &parser.Field{
                    ID:           4,
                    Name:         "presence_penalty",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "double",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 生成文本的重复都",
                },
                &parser.Field{
                    ID:           5,
                    Name:         "max_tokens",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "i32",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 生成文本的最大长度",
                },
                &parser.Field{
                    ID:           6,
                    Name:         "seed",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "i32",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 随机种子",
                },
                &parser.Field{
                    ID:           7,
                    Name:         "stop",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:      "list",
                        KeyType:   (*parser.Type)(nil),
                        ValueType: &parser.Type{
                            Name:        "string",
                            KeyType:     (*parser.Type)(nil),
                            ValueType:   (*parser.Type)(nil),
                            CppType:     "",
                            Annotations: nil,
                            Category:    0,
                            Reference:   (*parser.Reference)(nil),
                            IsTypedef:   (*bool)(nil),
                        },
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 停止词",
                },
                &parser.Field{
                    ID:           8,
                    Name:         "enable_search",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "bool",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 是否启用搜索",
                },
                &parser.Field{
                    ID:           9,
                    Name:         "messages",
                    Requiredness: 1,
                    Type:         &parser.Type{
                        Name:      "list",
                        KeyType:   (*parser.Type)(nil),
                        ValueType: &parser.Type{
                            Name:        "Message",
                            KeyType:     (*parser.Type)(nil),
                            ValueType:   (*parser.Type)(nil),
                            CppType:     "",
                            Annotations: nil,
                            Category:    0,
                            Reference:   (*parser.Reference)(nil),
                            IsTypedef:   (*bool)(nil),
                        },
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "",
                },
            },
            Annotations:      nil,
            ReservedComments: "// 定义请求结构体，要接收用户的输入，可能包含文件列表、",
        },
        &parser.StructLike{
            Category: "struct",
            Name:     "Choice",
            Fields:   {
                &parser.Field{
                    ID:           1,
                    Name:         "finish_reason",
                    Requiredness: 2,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 结束原因",
                },
                &parser.Field{
                    ID:           2,
                    Name:         "message",
                    Requiredness: 0,
                    Type:         &parser.Type{
                        Name:      "list",
                        KeyType:   (*parser.Type)(nil),
                        ValueType: &parser.Type{
                            Name:        "Message",
                            KeyType:     (*parser.Type)(nil),
                            ValueType:   (*parser.Type)(nil),
                            CppType:     "",
                            Annotations: nil,
                            Category:    0,
                            Reference:   (*parser.Reference)(nil),
                            IsTypedef:   (*bool)(nil),
                        },
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 生成的文本",
                },
                &parser.Field{
                    ID:           3,
                    Name:         "index",
                    Requiredness: 0,
                    Type:         &parser.Type{
                        Name:        "i32",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "//消息索引",
                },
            },
            Annotations:      nil,
            ReservedComments: "// 生成的回复",
        },
        &parser.StructLike{
            Category: "struct",
            Name:     "AskResponse",
            Fields:   {
                &parser.Field{
                    ID:           1,
                    Name:         "id",
                    Requiredness: 0,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 生成的调用的唯一标识",
                },
                &parser.Field{
                    ID:           2,
                    Name:         "model",
                    Requiredness: 0,
                    Type:         &parser.Type{
                        Name:        "string",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 模型名称",
                },
                &parser.Field{
                    ID:           3,
                    Name:         "choices",
                    Requiredness: 0,
                    Type:         &parser.Type{
                        Name:      "list",
                        KeyType:   (*parser.Type)(nil),
                        ValueType: &parser.Type{
                            Name:        "Choice",
                            KeyType:     (*parser.Type)(nil),
                            ValueType:   (*parser.Type)(nil),
                            CppType:     "",
                            Annotations: nil,
                            Category:    0,
                            Reference:   (*parser.Reference)(nil),
                            IsTypedef:   (*bool)(nil),
                        },
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Default:          (*parser.ConstValue)(nil),
                    Annotations:      nil,
                    ReservedComments: "// 生成的文本",
                },
            },
            Annotations:      nil,
            ReservedComments: "",
        },
    },
    Unions:     nil,
    Exceptions: nil,
    Services:   {
        &parser.Service{
            Name:      "NexusService",
            Extends:   "",
            Functions: {
                &parser.Function{
                    Name:         "AskServer",
                    Oneway:       false,
                    Void:         false,
                    FunctionType: &parser.Type{
                        Name:        "AskResponse",
                        KeyType:     (*parser.Type)(nil),
                        ValueType:   (*parser.Type)(nil),
                        CppType:     "",
                        Annotations: nil,
                        Category:    0,
                        Reference:   (*parser.Reference)(nil),
                        IsTypedef:   (*bool)(nil),
                    },
                    Arguments: {
                        &parser.Field{
                            ID:           1,
                            Name:         "req",
                            Requiredness: 0,
                            Type:         &parser.Type{
                                Name:        "AskRequest",
                                KeyType:     (*parser.Type)(nil),
                                ValueType:   (*parser.Type)(nil),
                                CppType:     "",
                                Annotations: nil,
                                Category:    0,
                                Reference:   (*parser.Reference)(nil),
                                IsTypedef:   (*bool)(nil),
                            },
                            Default:          (*parser.ConstValue)(nil),
                            Annotations:      nil,
                            ReservedComments: "",
                        },
                    },
                    Throws:      nil,
                    Annotations: {
                        &parser.Annotation{
                            Key:    "streaming.mode",
                            Values: {"server"},
                        },
                    },
                    ReservedComments: "",
                },
            },
            Annotations:      nil,
            Reference:        (*parser.Reference)(nil),
            ReservedComments: "",
        },
    },
    Name2Category: {},
}